name: Deploy to Render

on:
  push:
    branches:
      - main # This workflow triggers only when code is pushed to the 'main' branch
  workflow_dispatch: # Allows manual triggering from GitHub Actions UI

jobs:
  trigger-render-deploys:
    runs-on: ubuntu-latest # GitHub Actions runner environment
    needs: build-and-test # Ensures CI checks pass before attempting deployment
    if: success() # Only run if the 'build-and-test' job was successful

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Checks out your repository code

      # Install 'jq' utility to parse JSON responses from Render API
      # This is needed to dynamically get the deploy hook URL
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # --- Trigger Backend Web Service Deploy on Render ---
      - name: Trigger Render Backend Deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
        run: |
          if [ -z "$SERVICE_ID" ]; then
            echo "Error: RENDER_BACKEND_SERVICE_ID secret not set. Skipping backend deploy."
            exit 0 # Exit successfully if ID is not set to prevent workflow failure
          fi

          echo "Attempting to get deploy hook URL for backend service (ID: $SERVICE_ID)..."
          # Use Render API to get the current deploy hook URL - more robust
          DEPLOY_HOOK_URL=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
            "https://api.render.com/v1/services/$SERVICE_ID/deploys" | \
            jq -r '.webhookUrl')

          if [ -z "$DEPLOY_HOOK_URL" ] || [ "$DEPLOY_HOOK_URL" == "null" ]; then
            echo "Error: Could not retrieve deploy hook URL for backend. Check SERVICE_ID or API Key scope."
            exit 1 # Fail if hook URL cannot be retrieved
          fi

          echo "Triggering deploy for backend service (ID: $SERVICE_ID) via hook..."
          curl -X POST "$DEPLOY_HOOK_URL"
          echo "Backend deploy triggered successfully."

      # --- Trigger Frontend Static Site Deploy on Render ---
      - name: Trigger Render Frontend Deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
        run: |
          if [ -z "$SERVICE_ID" ]; then
            echo "Error: RENDER_FRONTEND_SERVICE_ID secret not set. Skipping frontend deploy."
            exit 0 # Exit successfully if ID is not set to prevent workflow failure
          fi

          echo "Attempting to get deploy hook URL for frontend static site (ID: $SERVICE_ID)..."
          DEPLOY_HOOK_URL=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
            "https://api.render.com/v1/services/$SERVICE_ID/deploys" | \
            jq -r '.webhookUrl')

          if [ -z "$DEPLOY_HOOK_URL" ] || [ "$DEPLOY_HOOK_URL" == "null" ]; then
            echo "Error: Could not retrieve deploy hook URL for frontend. Check SERVICE_ID or API Key scope."
            exit 1 # Fail if hook URL cannot be retrieved
          fi

          echo "Triggering deploy for frontend static site (ID: $SERVICE_ID) via hook..."
          curl -X POST "$DEPLOY_HOOK_URL"
          echo "Frontend deploy triggered successfully."